[{"content":"Hi üëã # I\u0026rsquo;m Fabien, 28 years old, currently learning the DevOps way at Claranet as an intern in DevOps engineering.\nAbout this website # When I got the time, I try to write some articles (in üá´üá∑) in order to organize my knowledge. You can find the lastest articles just below.\nThis website is 100% open-source and the codebase is fully available on this repo in case of you wish to fork it for your own needs.\nIf you find anything interesting on this website and wish to reuse the content, please don\u0026rsquo;t forget to include a link towards the source üôè\n","date":"13 March 2023","permalink":"/","section":"/home","summary":"Hi üëã # I\u0026rsquo;m Fabien, 28 years old, currently learning the DevOps way at Claranet as an intern in DevOps engineering.","title":"/home"},{"content":"","date":"13 March 2023","permalink":"/tags/appservices/","section":"Tags","summary":"","title":"appservices"},{"content":"","date":"13 March 2023","permalink":"/tags/azure/","section":"Tags","summary":"","title":"azure"},{"content":"","date":"13 March 2023","permalink":"/categories/azure/","section":"Categories","summary":"","title":"azure"},{"content":"","date":"13 March 2023","permalink":"/tags/azuremanagedsql/","section":"Tags","summary":"","title":"azuremanagedsql"},{"content":" C\u0026rsquo;est ici que je publie mes articles en üá´üá∑ quand le temps me le permet üìå Articles r√©cents # ","date":"13 March 2023","permalink":"/blog/","section":"Blog","summary":" C\u0026rsquo;est ici que je publie mes articles en üá´üá∑ quand le temps me le permet üìå Articles r√©cents # ","title":"Blog"},{"content":"","date":"13 March 2023","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"13 March 2023","permalink":"/tags/cloud/","section":"Tags","summary":"","title":"cloud"},{"content":"Pr√©requis # Un compte Azure (ici j\u0026rsquo;utilise mon compte Azure Student) Terraform AzureCLI Un compte de stockage Azure, avec un containeur permettant de stocker le terraform.tfstate Dans mon cas, j\u0026rsquo;ai cr√©√© un groupe de ressource d√©di√© √† mon backend via le portail Azure, puis le compte de stockage dans ce groupe :\nCi ce n\u0026rsquo;est pas d√©j√† fait, il faut vous authentifier √† Azure via la commande az login et suivre les instructions.\nObjectif # L\u0026rsquo;objectif de cet article est d\u0026rsquo;expliquer la mise en place d\u0026rsquo;une instance GLPI dans le cloud Azure, et de sa base de donn√©e MySQL en utilisant des services manag√©s propos√©s par Microsoft. L\u0026rsquo;int√©gralit√© du code est disponible ce repo . Cet article est bas√© sur le d√©ploiement de GLPI, mais devrais fonctionner avec n\u0026rsquo;importe quelle application web fonctionnant avec une base de donn√©e MySQL.\nInfrastructure cible # Pour d√©ployer notre instance de test, nous allons (dans l\u0026rsquo;ordre) d√©finir :\nUn groupe de ressource Azure qui va contenir l\u0026rsquo;ensemble des ressources Un VPC (Virtual Network sur Azure) 2 subnets : un d√©di√© √† la base de donn√©es, l\u0026rsquo;autre √† l\u0026rsquo;application web. Une zone DNS priv√©e d√©di√©e √† la base de donn√©e MySQL Un serveur manag√© Azure mysql flexible (plan Bs1) Une base de donn√©e manag√©e Azure SQL Un plan App Service Linux (B1) Une App Service Linux Une r√®gle de pare-feu autorisant les instances Azure √† acc√©der √† la base de donn√©e. La base de donn√©e ne sera pas accessible via le web, mais uniquement via notre VPC. En fin de compte, l\u0026rsquo;architecture devrais ressembler √† ceci :\nTerraform # Structure # Notre code Terraform se d√©compose en 3 fichiers :\n‚îú‚îÄ‚îÄ inputs.tf ‚îú‚îÄ‚îÄ main.tf ‚îî‚îÄ‚îÄ outputs.tf inputs.tfd√©finit les variables d\u0026rsquo;entr√©es (adressage, nom des ressources etc). inputs.tf outputs.tfpermet d\u0026rsquo;afficher les donn√©es n√©cessaires pour se connecter √† notre app une fois le d√©ploiement termin√©. outputs.tf main.tf contient l\u0026rsquo;ensemble du code provisionnant l\u0026rsquo;infrastructure. Je vais le d√©tailler ci-dessous. Configuration du backend # Au d√©but du fichier main.tf, je configure le provider Terraform azurerm, en lui indiquant o√π stocker le fichier terraform.statepermettant de garder en m√©moire la configuration de l\u0026rsquo;infrastructure :\nterraform { backend \u0026#34;azurerm\u0026#34; { resource_group_name = \u0026#34;backend-terraform-rg\u0026#34; storage_account_name = \u0026#34;terraformbackend9809\u0026#34; container_name = \u0026#34;terraform\u0026#34; key = \u0026#34;terraform.tfstate\u0026#34; } required_providers { azurerm = { source = \u0026#34;hashicorp/azurerm\u0026#34; version = \u0026#34;~\u0026gt; 3.47.0\u0026#34; } } required_version = \u0026#34;\u0026gt;= 1.4.0\u0026#34; } provider \u0026#34;azurerm\u0026#34; { features {} } Cr√©ation du groupe de ressource # Pour cr√©er des ressources dans Azure, il faut cr√©er un groupe de ressources :\n# Resource Group resource \u0026#34;azurerm_resource_group\u0026#34; \u0026#34;rg\u0026#34; { name = var.resource_group_name location = var.location } A noter: le code reprends les variables d√©finies dans le fichier inputs.tf. Il en va de m√™me pour les exemples suivants. Cr√©ation du VPC et des sous-r√©seaux # L\u0026rsquo;exemple de code ci-dessous cr√©e un VPC, et deux sous r√©seaux. Un pour la base de donn√©e, et un pour l\u0026rsquo;application web :\n# Virtual Network and subnet resource \u0026#34;azurerm_virtual_network\u0026#34; \u0026#34;vnet\u0026#34; { name = var.vnet_name address_space = var.vnet_address_space location = var.location resource_group_name = azurerm_resource_group.rg.name } resource \u0026#34;azurerm_subnet\u0026#34; \u0026#34;mysql_subnet\u0026#34; { name = var.mysql_subnet_name resource_group_name = azurerm_resource_group.rg.name virtual_network_name = azurerm_virtual_network.vnet.name address_prefixes = var.mysql_subnet_address_prefixes service_endpoints = [\u0026#34;Microsoft.Sql\u0026#34;] delegation { name = \u0026#34;vnet-delegation\u0026#34; service_delegation { name = \u0026#34;Microsoft.DBforMySQL/flexibleServers\u0026#34; actions = [ \u0026#34;Microsoft.Network/virtualNetworks/subnets/action\u0026#34; ] } } } resource \u0026#34;azurerm_subnet\u0026#34; \u0026#34;app_service_subnet\u0026#34; { name = var.app_subnet_name resource_group_name = azurerm_resource_group.rg.name virtual_network_name = azurerm_virtual_network.vnet.name address_prefixes = var.app_subnet_address_prefixes delegation { name = \u0026#34;vnet-delegation\u0026#34; service_delegation { name = \u0026#34;Microsoft.Web/serverFarms\u0026#34; actions = [\u0026#34;Microsoft.Network/virtualNetworks/subnets/action\u0026#34;] } } } Les d√©l√©gations configur√©es dans les blocs delegationet service_delegationpermettent de designer ces subnets en tant que cibles pour des ressources PaaS Azure. Serveur de base de donn√©e SQL # J\u0026rsquo;ai choisi de d√©ployer une base de donn√©e de type flexible, en utilisant le plan B_Standard_B1s. C\u0026rsquo;est suffisant pour notre infrastructure, et peu on√©reux. Le tableau des tarifs est disponible ici.\nresource \u0026#34;azurerm_mysql_flexible_server\u0026#34; \u0026#34;mysql\u0026#34; { name = var.mysql_server_name location = azurerm_resource_group.rg.location resource_group_name = azurerm_resource_group.rg.name administrator_login = var.mysql_database_admin_username administrator_password = random_password.mysql_password.result backup_retention_days = 5 sku_name = \u0026#34;B_Standard_B1s\u0026#34; delegated_subnet_id = azurerm_subnet.mysql_subnet.id } Le mot de passe administrateur est g√©n√©r√© al√©atoirement et sera affich√© dans les output apr√®s avoir d√©ploy√© l\u0026rsquo;infrastructure. L\u0026rsquo;option\u0026rsquo; delegated_subnet_id permet d\u0026rsquo;attacher ce serveur au subnet pr√©c√©dement cr√©√©.\nBase de donn√©e SQL # # MySQL Database resource \u0026#34;azurerm_mysql_flexible_database\u0026#34; \u0026#34;mysql\u0026#34; { name = var.mysql_database_name resource_group_name = azurerm_resource_group.rg.name server_name = azurerm_mysql_flexible_server.mysql.name charset = \u0026#34;utf8\u0026#34; collation = \u0026#34;utf8_unicode_ci\u0026#34; } Cet extrait de code cr√©e une base de donn√©e d√©di√©e √† GLPI, sur le serveur MySQL manag√© Azure.\nR√®gles de firewall # # Firewall rule resource \u0026#34;azurerm_mysql_flexible_server_firewall_rule\u0026#34; \u0026#34;fw-mysql\u0026#34; { name = \u0026#34;AllowAzureIPs\u0026#34; resource_group_name = azurerm_resource_group.rg.name server_name = azurerm_mysql_flexible_server.mysql.name start_ip_address = \u0026#34;0.0.0.0\u0026#34; end_ip_address = \u0026#34;0.0.0.0\u0026#34; } Par convention, autoriser les ips 0.0.0.0revient √† autoriser les ressources Azure uniquement d\u0026rsquo;acc√©der √† la base de donn√©e.\nPlan Azure App Service et application App Service # resource \u0026#34;azurerm_service_plan\u0026#34; \u0026#34;glpi-service-plan\u0026#34; { name = var.glpi_app_service_plan_name resource_group_name = azurerm_resource_group.rg.name location = azurerm_resource_group.rg.location os_type = \u0026#34;Linux\u0026#34; sku_name = \u0026#34;B1\u0026#34; } resource \u0026#34;azurerm_linux_web_app\u0026#34; \u0026#34;glpi-app-service\u0026#34; { name = var.glpi_app_service_name resource_group_name = azurerm_resource_group.rg.name location = azurerm_service_plan.glpi-service-plan.location service_plan_id = azurerm_service_plan.glpi-service-plan.id site_config { always_on = false application_stack { docker_image = \u0026#34;diouxx/glpi\u0026#34; docker_image_tag = \u0026#34;latest\u0026#34; } } } #Connect the Azure App to subnet resource \u0026#34;azurerm_app_service_virtual_network_swift_connection\u0026#34; \u0026#34;app\u0026#34; { app_service_id = azurerm_linux_web_app.glpi-app-service.id subnet_id = azurerm_subnet.app_service_subnet.id } Cet extrait de code d√©ploye l\u0026rsquo;application web GLPI au sein d\u0026rsquo;un plan B1. Dans mon exemple, j\u0026rsquo;utilise une image docker GLPI h√©berg√©e sur le docker hub.\nLe plan B1 est le plan App Service le moins cher permettant d\u0026rsquo;attacher un App Service √† un subnet, et ainsi pouvoir communiquer en interne avec la base de donn√©e. D√©ploiement de l\u0026rsquo;infrastructure # Une fois le code r√©dig√© (ou t√©l√©charg√© directement depuis mon repo ), le d√©ploiement s\u0026rsquo;effectue en 3 commandes :\nterraform init terraform plan terraform apply terraform init permet de configurer le backend et r√©cup√©rer le module azurerm. La commande plan permet de passer en revue les changements apport√©s √† l\u0026rsquo;infrastructure, et apply de la d√©ployer :\nSi tout se passe bien, la sortie de la commande apply vous donnera le n√©cessaire pour configurer votre app GLPI :\nLe d√©ploiement peut prendre du temps, notamment la base de donn√©e MySQL (+/- 10 minutes dans mon cas). L\u0026rsquo;App Service peut aussi mettre un certain temps avant d\u0026rsquo;√™tre accessible depuis l\u0026rsquo;adresse, le temps que l\u0026rsquo;image docker soit d√©ploy√©e. Derni√®res √©tapes de configuration # Dans l\u0026rsquo;interface d\u0026rsquo;installation de GLPI, saisir les informations donn√©es dans l\u0026rsquo;output terraform. Si vous avez utilis√© mon fichier input.tf, l\u0026rsquo;utilisateur SQL sera glpi. La premi√®re tentative de connexion donnera cette erreur :\nPour la corriger, il suffit de se rendre dans les param√®tres de la BDD sur le portail Azure, et de passer le param√®tre require_secure_transportsur OFF:\nIl est normalement d√©sormais possible d\u0026rsquo;installer GLPI sur la base de donn√©e cr√©√©e pour l\u0026rsquo;occasion √† l\u0026rsquo;aide de Terraform:\nV√©rifications # Une fois l\u0026rsquo;application install√©e, on se connecte √† l\u0026rsquo;aide des identifiants par d√©faut (glpi/glpi):\nC\u0026rsquo;est fonctionnel!\nEn raison de la faible puissance de la base de donn√©e manag√©e choisie, l\u0026rsquo;affichage peut √™tre tr√®s long dans l\u0026rsquo;application. Si c\u0026rsquo;est inutilisable, ne pas h√©siter √† augmenter la taille de l\u0026rsquo;instance SQL. Suppression de l\u0026rsquo;infrastructure # Un simple terraform destroyd√©truira l\u0026rsquo;ensemble des ressources cr√©es. A ne pas oublier, le co√ªt mensuel de l\u0026rsquo;App Service peut √™tre √©lev√©.\n","date":"13 March 2023","permalink":"/blog/informatique/azure-appservices-terraform/","section":"Blog","summary":"Pr√©requis # Un compte Azure (ici j\u0026rsquo;utilise mon compte Azure Student) Terraform AzureCLI Un compte de stockage Azure, avec un containeur permettant de stocker le terraform.","title":"D√©ployer GLPI 10 sur Azure App Services avec une base de donn√©e manag√©e via Terraform"},{"content":"","date":"13 March 2023","permalink":"/categories/devops/","section":"Categories","summary":"","title":"devops"},{"content":"","date":"13 March 2023","permalink":"/tags/glpi/","section":"Tags","summary":"","title":"glpi"},{"content":"","date":"13 March 2023","permalink":"/tags/iac/","section":"Tags","summary":"","title":"iac"},{"content":"","date":"13 March 2023","permalink":"/categories/informatique/","section":"Categories","summary":"","title":"informatique"},{"content":"","date":"13 March 2023","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":"13 March 2023","permalink":"/tags/terraform/","section":"Tags","summary":"","title":"terraform"},{"content":"","date":"13 March 2023","permalink":"/categories/terraform/","section":"Categories","summary":"","title":"terraform"},{"content":"","date":"7 February 2023","permalink":"/tags/latex/","section":"Tags","summary":"","title":"latex"},{"content":"","date":"7 February 2023","permalink":"/tags/markdown/","section":"Tags","summary":"","title":"markdown"},{"content":"","date":"7 February 2023","permalink":"/categories/markdown/","section":"Categories","summary":"","title":"markdown"},{"content":"","date":"7 February 2023","permalink":"/tags/pandoc/","section":"Tags","summary":"","title":"pandoc"},{"content":"","date":"7 February 2023","permalink":"/tags/pdf/","section":"Tags","summary":"","title":"pdf"},{"content":"Le language Markdown # Attention Cet article part du principe que vous √™tes d√©j√† √† l\u0026rsquo;aise avec la r√©daction en Markdown. Si ce n\u0026rsquo;est pas le cas, un tutorial interactif assez bien fait est disponible ici Markdown est un language de balisage facile √† utiliser et √† lire. Je m\u0026rsquo;en suis beaucoup servi lors de mes √©tudes pour prendre des notes, car Markdown permet d\u0026rsquo;obtenir un r√©sultat propre tr√®s rapidement avec un simple √©diteur de texte. Diff√©rents logiciels sont compatible avec Markdown, permettant d\u0026rsquo;organiser ses notes et d\u0026rsquo;obtenir un aper√ßu en temps r√©el lors de l\u0026rsquo;√©dition. Personnellement, j\u0026rsquo;utilise Bear sous MacOS:\nInterface principal de Bear, avec le texte format√© en utilisant Markdown Markdown est aussi extr√™mement r√©pandu dans le monde de l\u0026rsquo;informatique, la majorit√© des fichiers README √©tant r√©dig√© en utilisant la syntaxe Markdown.\nLes limites du Markdown # J\u0026rsquo;ai tellement pris l\u0026rsquo;habitude de r√©diger mes documentations et notes en Markdown, que √ßa soit sur VS Code ou sur des applications type Bear, que l\u0026rsquo;utilisation de Word me para√Æt d√©sormais extr√™mement lourde et contre-productive. Le souci, c\u0026rsquo;est que par d√©faut, Markdown n\u0026rsquo;est pas pr√©vu pour g√©n√©rer des documents imprimables. En effet, c\u0026rsquo;est uniquement un language de balisage, con√ßu pour √™tre interpr√©t√© et affich√© √† l\u0026rsquo;√©cran.\nG√©n√©rer un document type \u0026ldquo;M√©moire\u0026rdquo; depuis des fichiers Markdown # Je me suis bas√© sur ce repo pour cr√©er un template (en Fran√ßais) permettant de g√©n√©rer un document adapt√© √† mes rendus d\u0026rsquo;√©cole. Concr√®tement, il s\u0026rsquo;agit ici d\u0026rsquo;utiliser Pandoc associ√© √† un template LaTeX permettant de g√©n√©rer le document. Rassurez-vous, il n\u0026rsquo;est pas n√©cessaire d\u0026rsquo;apprendre LaTeX pour utiliser ce projet, seule certaines commandes suffisent.\n√âtape 1 # R√©cup√©rer sur mon GitHub le template :\ngit clone https://github.com/fabienchevalier/phd_thesis_markdown.git Pandoc n√©cessite LaTeX pour g√©n√©rer des PDF. En fonction de votre OS, il faut donc installer une distribution LaTeX:\nLinux: sudo apt-get install textlive Windows: voir du c√¥t√© de MiKTex MacOS: via homebrew avec brew install --cask mactex Par la suite, mettre √† jour sa distribution LaTeX:\nsudo tlmgr update --self √âtape 2 # Installer Pandoc dans un environnement Python s√©par√©. Personnellement, j\u0026rsquo;utilise miniconda sous MacOS (disponible aussi sur Linux/Windows):\nbrew install miniconda #apt-get install miniconda devrais fonctionner sous Ubuntu/Debian conda create -n phd -y python=3.7 pandoc conda activate phd Les autres d√©pendances peuvent √™tre install√©es automatiquement via le Makefile propos√© :\nmake install √âtape 3 # Par la suite, d√©poser les fichiers md dans le dossier source et executer make pdf pour g√©n√©rer le document au format PDF. Ne pas oublier de modifier le fichier metadata.yml dans le dossier source en fonction des besoins! Un exemple de rendu est disponible ici.\n","date":"7 February 2023","permalink":"/blog/informatique/markdown-to-pdf-latex/","section":"Blog","summary":"Le language Markdown # Attention Cet article part du principe que vous √™tes d√©j√† √† l\u0026rsquo;aise avec la r√©daction en Markdown.","title":"R√©diger son m√©moire universitaire en Markdown"}]